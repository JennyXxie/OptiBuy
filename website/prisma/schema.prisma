// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessions  Session[]
  alerts    Alert[]
}

model Session {
  id        String   @id @default(cuid())
  sessionToken String @unique
  userId    String
  expires   DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  imageUrl    String?
  category    String?
  brand       String?
  sku         String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  prices      Price[]
  coupons     Coupon[]
}

model Price {
  id        String   @id @default(cuid())
  productId String
  platform  String   // "amazon", "temu", "shein"
  price     Float
  currency  String   @default("USD")
  url       String?
  inStock   Boolean  @default(true)
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId, platform])
  @@index([createdAt])
}

model Coupon {
  id          String   @id @default(cuid())
  productId   String
  code        String
  description String?
  discount    Float    // percentage or fixed amount
  discountType String  // "percentage" or "fixed"
  platform    String   // "amazon", "temu", "shein"
  validUntil  DateTime?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
  @@index([isActive])
}

model Alert {
  id          String        @id @default(cuid())
  userId      String
  alertName   String
  productLink String
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  priceHistories PriceHistory[]

  @@index([userId])
}

model PriceHistory {
  id        String   @id @default(cuid())
  alertId   String
  price     Float
  timestamp DateTime @default(now())
  alert     Alert    @relation(fields: [alertId], references: [id], onDelete: Cascade)

  @@index([alertId])
}

model ChatSession {
  id        String      @id @default(cuid())
  userId    String?
  messages  ChatMessage[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model ChatMessage {
  id            String      @id @default(cuid())
  sessionId     String
  role          String      // "user" or "assistant"
  content       String
  timestamp     DateTime    @default(now())
  session       ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId])
}