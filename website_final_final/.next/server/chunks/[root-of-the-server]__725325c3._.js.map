{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/yunjinxie/Desktop/website/OptiBuy/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/yunjinxie/Desktop/website/OptiBuy/src/app/api/products/%5Bid%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { prisma } from '@/lib/prisma'\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const productId = params.id\n\n    const product = await prisma.product.findUnique({\n      where: { id: productId },\n      include: {\n        prices: {\n          orderBy: { createdAt: 'desc' },\n        },\n        coupons: {\n          where: { isActive: true },\n        },\n      },\n    })\n\n    if (!product) {\n      return NextResponse.json(\n        { success: false, error: 'Product not found' },\n        { status: 404 }\n      )\n    }\n\n    // Get price history for charts\n    const priceHistory = await prisma.price.findMany({\n      where: { productId },\n      orderBy: { createdAt: 'asc' },\n    })\n\n    // Group prices by platform and date\n    const pricesByPlatform = priceHistory.reduce((acc, price) => {\n      if (!acc[price.platform]) {\n        acc[price.platform] = []\n      }\n      acc[price.platform].push({\n        date: price.createdAt.toISOString(),\n        price: price.price,\n        inStock: price.inStock,\n      })\n      return acc\n    }, {} as Record<string, any[]>)\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        ...product,\n        priceHistory: pricesByPlatform,\n      },\n    })\n  } catch (error) {\n    console.error('Product fetch error:', error)\n    return NextResponse.json(\n      { success: false, error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,YAAY,OAAO,EAAE;QAE3B,MAAM,UAAU,MAAM,iKAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YAC9C,OAAO;gBAAE,IAAI;YAAU;YACvB,SAAS;gBACP,QAAQ;oBACN,SAAS;wBAAE,WAAW;oBAAO;gBAC/B;gBACA,SAAS;oBACP,OAAO;wBAAE,UAAU;oBAAK;gBAC1B;YACF;QACF;QAEA,IAAI,CAAC,SAAS;YACZ,OAAO,iLAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAoB,GAC7C;gBAAE,QAAQ;YAAI;QAElB;QAEA,+BAA+B;QAC/B,MAAM,eAAe,MAAM,iKAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/C,OAAO;gBAAE;YAAU;YACnB,SAAS;gBAAE,WAAW;YAAM;QAC9B;QAEA,oCAAoC;QACpC,MAAM,mBAAmB,aAAa,MAAM,CAAC,CAAC,KAAK;YACjD,IAAI,CAAC,GAAG,CAAC,MAAM,QAAQ,CAAC,EAAE;gBACxB,GAAG,CAAC,MAAM,QAAQ,CAAC,GAAG,EAAE;YAC1B;YACA,GAAG,CAAC,MAAM,QAAQ,CAAC,CAAC,IAAI,CAAC;gBACvB,MAAM,MAAM,SAAS,CAAC,WAAW;gBACjC,OAAO,MAAM,KAAK;gBAClB,SAAS,MAAM,OAAO;YACxB;YACA,OAAO;QACT,GAAG,CAAC;QAEJ,OAAO,iLAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ,GAAG,OAAO;gBACV,cAAc;YAChB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,iLAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAwB,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}