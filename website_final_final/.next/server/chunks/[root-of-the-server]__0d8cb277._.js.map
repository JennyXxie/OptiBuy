{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/yunjinxie/Desktop/website/OptiBuy/src/lib/serpapi.ts"],"sourcesContent":["import axios from 'axios'\n\nconst SERPAPI_KEY = process.env.SERPAPI_KEY\n\nif (!SERPAPI_KEY) {\n  console.warn('‚ö†Ô∏è Missing SERPAPI_KEY in environment variables')\n}\n\nexport interface SerpApiProduct {\n  title: string\n  price: string\n  extracted_price: number\n  link: string\n  source: string\n  rating?: number\n  reviews?: number\n  thumbnail?: string\n  position: number\n}\n\nexport async function fetchSerpApiProducts(query: string, engine: string = 'google_shopping'): Promise<SerpApiProduct[]> {\n  if (!SERPAPI_KEY) {\n    console.warn('SERPAPI_KEY not available, returning empty results')\n    return []\n  }\n\n  try {\n    const url = `https://serpapi.com/search.json?q=${encodeURIComponent(query)}&engine=${engine}&api_key=${SERPAPI_KEY}`\n    \n    const response = await axios.get(url, {\n      timeout: 10000,\n    })\n\n    const results = response.data.shopping_results || response.data.organic_results || []\n    \n    return results.map((item: any) => ({\n      title: item.title || '',\n      price: item.price || '',\n      extracted_price: item.extracted_price || 0,\n      link: item.link || item.product_link || '',\n      source: item.source || 'Unknown',\n      rating: item.rating || undefined,\n      reviews: item.reviews || undefined,\n      thumbnail: item.thumbnail || '',\n      position: item.position || 0\n    }))\n  } catch (error) {\n    console.error('SerpAPI error:', error)\n    return []\n  }\n}\n\nexport async function fetchAmazonProducts(query: string): Promise<SerpApiProduct[]> {\n  return fetchSerpApiProducts(query, 'amazon')\n}\n\nexport async function fetchGoogleShoppingProducts(query: string): Promise<SerpApiProduct[]> {\n  return fetchSerpApiProducts(query, 'google_shopping')\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,QAAQ,IAAI,CAAC;AACf;AAcO,eAAe,qBAAqB,KAAa,EAAE,SAAiB,iBAAiB;IAC1F,IAAI,CAAC,aAAa;QAChB,QAAQ,IAAI,CAAC;QACb,OAAO,EAAE;IACX;IAEA,IAAI;QACF,MAAM,MAAM,CAAC,kCAAkC,EAAE,mBAAmB,OAAO,QAAQ,EAAE,OAAO,SAAS,EAAE,aAAa;QAEpH,MAAM,WAAW,MAAM,mLAAK,CAAC,GAAG,CAAC,KAAK;YACpC,SAAS;QACX;QAEA,MAAM,UAAU,SAAS,IAAI,CAAC,gBAAgB,IAAI,SAAS,IAAI,CAAC,eAAe,IAAI,EAAE;QAErF,OAAO,QAAQ,GAAG,CAAC,CAAC,OAAc,CAAC;gBACjC,OAAO,KAAK,KAAK,IAAI;gBACrB,OAAO,KAAK,KAAK,IAAI;gBACrB,iBAAiB,KAAK,eAAe,IAAI;gBACzC,MAAM,KAAK,IAAI,IAAI,KAAK,YAAY,IAAI;gBACxC,QAAQ,KAAK,MAAM,IAAI;gBACvB,QAAQ,KAAK,MAAM,IAAI;gBACvB,SAAS,KAAK,OAAO,IAAI;gBACzB,WAAW,KAAK,SAAS,IAAI;gBAC7B,UAAU,KAAK,QAAQ,IAAI;YAC7B,CAAC;IACH,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kBAAkB;QAChC,OAAO,EAAE;IACX;AACF;AAEO,eAAe,oBAAoB,KAAa;IACrD,OAAO,qBAAqB,OAAO;AACrC;AAEO,eAAe,4BAA4B,KAAa;IAC7D,OAAO,qBAAqB,OAAO;AACrC","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/yunjinxie/Desktop/website/OptiBuy/src/app/api/products/search/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { z } from 'zod'\nimport { fetchSerpApiProducts } from '@/lib/serpapi'\n\nconst searchSchema = z.object({\n  query: z.string().min(1),\n  limit: z.number().min(1).max(50).default(10),\n  category: z.string().optional(),\n})\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const query = searchParams.get('query') || ''\n    const limit = parseInt(searchParams.get('limit') || '10')\n    const category = searchParams.get('category') || undefined\n\n    const validatedData = searchSchema.parse({\n      query,\n      limit,\n      category,\n    })\n\n    console.log(`üîç Searching for: ${validatedData.query}`)\n\n    // Fetch fresh data from SerpAPI (bypass cache)\n    const serpApiResults = await fetchSerpApiProducts(validatedData.query)\n    console.log(`üì¶ Got ${serpApiResults.length} results from SerpAPI`)\n\n    // Transform SerpAPI data for frontend\n    const transformedProducts = serpApiResults.slice(0, limit).map((product, index) => ({\n      id: `serpapi-${index}`,\n      name: product.title,\n      description: `Product from ${product.source}`,\n      imageUrl: product.thumbnail || '/placeholder-product.jpg',\n      category: 'General',\n      brand: product.source,\n      prices: {\n        [product.source]: {\n          price: product.extracted_price || 0,\n          platform: product.source,\n          url: product.link,\n          inStock: true,\n          createdAt: new Date()\n        }\n      },\n      bestPrice: {\n        platform: product.source,\n        price: product.extracted_price || 0,\n        savings: Math.floor(Math.random() * 20), // Mock savings\n      },\n      coupons: [],\n    }))\n\n    console.log(`‚úÖ Returning ${transformedProducts.length} products`)\n\n    // Add cache control headers to prevent caching\n    const response = NextResponse.json({\n      success: true,\n      data: transformedProducts,\n      total: transformedProducts.length,\n    })\n\n    // Disable caching\n    response.headers.set('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate')\n    response.headers.set('Pragma', 'no-cache')\n    response.headers.set('Expires', '0')\n\n    return response\n  } catch (error) {\n    console.error('Product search error:', error)\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { success: false, error: 'Invalid search parameters', details: error.errors },\n        { status: 400 }\n      )\n    }\n\n    return NextResponse.json(\n      { success: false, error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json()\n    \n    return NextResponse.json({\n      success: true,\n      message: 'Search query logged',\n    })\n  } catch (error) {\n    console.error('Search logging error:', error)\n    return NextResponse.json(\n      { success: false, error: 'Failed to log search' },\n      { status: 500 }\n    )\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}